name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Debug environment
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          echo "Package.json contents:"
          cat package.json
          echo "Node version: $(node --version)"
          echo "pnpm version: $(pnpm --version)"

      - name: Install dependencies
        run: |
          echo "Installing dependencies with pnpm..."
          if [ -f pnpm-lock.yaml ]; then
            echo "Found pnpm-lock.yaml, using frozen lockfile install"
            pnpm install --frozen-lockfile
          else
            echo "No pnpm-lock.yaml found, running regular install"
            pnpm install
          fi

      - name: Build application
        run: |
          echo "Building application..."
          echo "Node version: $(node --version)"
          echo "pnpm version: $(pnpm --version)"
          echo "Available scripts:"
          pnpm run --help || true
          echo "Running build..."
          CI=false pnpm run build
        env:
          NODE_ENV: production

      - name: Debug build output
        run: |
          echo "Build directory contents:"
          ls -la dist/
          echo "Index.html exists:"
          cat dist/index.html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
